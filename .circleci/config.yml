# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  test:

    docker:
      # specify the version you desire here
      - image: circleci/php:7.3-browsers

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mysql:9.4

    working_directory: ~/laravel

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: sudo composer self-update
      - run: composer install -n --prefer-dist

      - save_cache:
          paths:
            - ./vendor
          key: v1-dependencies-{{ checksum "composer.json" }}

      - run: cp .env.example .env
      - run: php artisan key:generate

      # Run unit tests
      - run: ./vendor/bin/phpunit
      # Run php code sniffer
      - run: composer cs

  deploy:

    docker:
      - image: hashicorp/terraform

    working_directory: ~/laravel

    steps:
      - checkout

      # Initialise the dev config
      - run: cd terraform/assets/dev/services/cluster; terraform init

      # Initialise the modules
      - run: cd terraform/modules/services/cluster; terraform init

      #- run:
      #    name: Test existance of .ssh directory
      #    command: mkdir -p "/home/circleci/.ssh"
      #- run:
      #    name: Deploy if tests pass and branch is Master
      #    command: ssh -o StrictHostKeyChecking=no deploy@34.248.153.156 "./deploy"

workflows:
  version: 2
  build-check:
    jobs:
      #- test:
      #    filters:
      #      branches:
      #        only:
      #          - master
      - deploy:
      #    requires:
      #      - test
          filters:
            branches:
              only: master
